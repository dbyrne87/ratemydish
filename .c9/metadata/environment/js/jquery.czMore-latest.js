{"filter":false,"title":"jquery.czMore-latest.js","tooltip":"/js/jquery.czMore-latest.js","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":138,"column":11},"action":"insert","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 5,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = obj.children(\".recordset\").size();","            var divPlus = '<div id=\"btnPlus\" />';","            var count = '<input id=\"' + this.id + '_czMore_txtCount\" name=\"' + this.id + '_czMore_txtCount\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            btnPlus.css({","                'float': 'right',","                'border': '0px',","                'background-image': 'url(\"img/add.png\")',","                'background-position': 'center center',","                'background-repeat': 'no-repeat',","                'height': '25px',","                'width': '25px',","                'cursor': 'pointer'","            });","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    var i = obj.children(\".recordset\").size();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='czMore_txtCount']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        old_name = this.name;","                        new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                btnMinus.css({","                    'float': 'right',","                    'border': '0px',","                    'background-image': 'url(\"img/remove.png\")',","                    'background-position': 'center center',","                    'background-repeat': 'no-repeat',","                    'height': '25px',","                    'width': '25px',","                    'cursor': 'poitnter'","                });","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = obj.children(\".recordset\").size();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='czMore_txtCount']\").val(obj.children(\".recordset\").size());","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","        });","    };","})(jQuery);"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":138,"column":11},"action":"remove","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 5,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = obj.children(\".recordset\").size();","            var divPlus = '<div id=\"btnPlus\" />';","            var count = '<input id=\"' + this.id + '_czMore_txtCount\" name=\"' + this.id + '_czMore_txtCount\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            btnPlus.css({","                'float': 'right',","                'border': '0px',","                'background-image': 'url(\"img/add.png\")',","                'background-position': 'center center',","                'background-repeat': 'no-repeat',","                'height': '25px',","                'width': '25px',","                'cursor': 'pointer'","            });","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    var i = obj.children(\".recordset\").size();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='czMore_txtCount']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        old_name = this.name;","                        new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                btnMinus.css({","                    'float': 'right',","                    'border': '0px',","                    'background-image': 'url(\"img/remove.png\")',","                    'background-position': 'center center',","                    'background-repeat': 'no-repeat',","                    'height': '25px',","                    'width': '25px',","                    'cursor': 'poitnter'","                });","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = obj.children(\".recordset\").size();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='czMore_txtCount']\").val(obj.children(\".recordset\").size());","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","        });","    };","})(jQuery);"],"id":5},{"start":{"row":0,"column":0},"end":{"row":157,"column":11},"action":"insert","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    \"use strict\";","","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 50,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null,","            styleOverride: false,","            countFieldPrefix: '_czMore_txtCount',","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = recordsetCount();","            var divPlus = '<div id=\"btnPlus\" class=\"btnPlus\"/>';","            var count = '<input id=\"' + this.id + options.countFieldPrefix + '\" name=\"' + this.id + options.countFieldPrefix + '\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            if(!options.styleOverride) {","              btnPlus.css({","                  'float': 'right',","                  'border': '0px',","                  'background-image': 'url(\"img/add.png\")',","                  'background-position': 'center center',","                  'background-repeat': 'no-repeat',","                  'height': '25px',","                  'width': '25px',","                  'cursor': 'pointer',","              });","            }","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    if (isMaxRecordset()){","                        return false;","                    }","                    var i = recordsetCount();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        var old_name = this.name;","                        var new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" class=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                if(!options.styleOverride) {","                  btnMinus.css({","                      'float': 'right',","                      'border': '0px',","                      'background-image': 'url(\"img/remove.png\")',","                      'background-position': 'center center',","                      'background-repeat': 'no-repeat',","                      'height': '25px',","                      'width': '25px',","                      'cursor': 'poitnter',","                  });","              }","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = recordsetCount();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(obj.children(\".recordset\").length);","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","","            function recordsetCount(){","                return obj.children(\".recordset\").length;","            }","","            function isMaxRecordset(){","                return recordsetCount() >= options.max;","            }","        });","    };","})(jQuery);"]}],[{"start":{"row":0,"column":0},"end":{"row":157,"column":11},"action":"remove","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    \"use strict\";","","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 50,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null,","            styleOverride: false,","            countFieldPrefix: '_czMore_txtCount',","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = recordsetCount();","            var divPlus = '<div id=\"btnPlus\" class=\"btnPlus\"/>';","            var count = '<input id=\"' + this.id + options.countFieldPrefix + '\" name=\"' + this.id + options.countFieldPrefix + '\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            if(!options.styleOverride) {","              btnPlus.css({","                  'float': 'right',","                  'border': '0px',","                  'background-image': 'url(\"img/add.png\")',","                  'background-position': 'center center',","                  'background-repeat': 'no-repeat',","                  'height': '25px',","                  'width': '25px',","                  'cursor': 'pointer',","              });","            }","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    if (isMaxRecordset()){","                        return false;","                    }","                    var i = recordsetCount();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        var old_name = this.name;","                        var new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" class=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                if(!options.styleOverride) {","                  btnMinus.css({","                      'float': 'right',","                      'border': '0px',","                      'background-image': 'url(\"img/remove.png\")',","                      'background-position': 'center center',","                      'background-repeat': 'no-repeat',","                      'height': '25px',","                      'width': '25px',","                      'cursor': 'poitnter',","                  });","              }","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = recordsetCount();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(obj.children(\".recordset\").length);","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","","            function recordsetCount(){","                return obj.children(\".recordset\").length;","            }","","            function isMaxRecordset(){","                return recordsetCount() >= options.max;","            }","        });","    };","})(jQuery);"],"id":6},{"start":{"row":0,"column":0},"end":{"row":157,"column":11},"action":"insert","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    \"use strict\";","","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 50,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null,","            styleOverride: false,","            countFieldPrefix: '_czMore_txtCount',","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = recordsetCount();","            var divPlus = '<div id=\"btnPlus\" class=\"btnPlus\"/>';","            var count = '<input id=\"' + this.id + options.countFieldPrefix + '\" name=\"' + this.id + options.countFieldPrefix + '\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            if(!options.styleOverride) {","              btnPlus.css({","                  'float': 'right',","                  'border': '0px',","                  'background-image': 'url(\"img/add.png\")',","                  'background-position': 'center center',","                  'background-repeat': 'no-repeat',","                  'height': '25px',","                  'width': '25px',","                  'cursor': 'pointer',","              });","            }","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    if (isMaxRecordset()){","                        return false;","                    }","                    var i = recordsetCount();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        var old_name = this.name;","                        var new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" class=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                if(!options.styleOverride) {","                  btnMinus.css({","                      'float': 'right',","                      'border': '0px',","                      'background-image': 'url(\"img/remove.png\")',","                      'background-position': 'center center',","                      'background-repeat': 'no-repeat',","                      'height': '25px',","                      'width': '25px',","                      'cursor': 'poitnter',","                  });","              }","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = recordsetCount();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(obj.children(\".recordset\").length);","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","","            function recordsetCount(){","                return obj.children(\".recordset\").length;","            }","","            function isMaxRecordset(){","                return recordsetCount() >= options.max;","            }","        });","    };","})(jQuery);"]}],[{"start":{"row":52,"column":44},"end":{"row":52,"column":55},"action":"remove","lines":["img/add.png"],"id":7},{"start":{"row":52,"column":44},"end":{"row":52,"column":65},"action":"insert","lines":["/static/media/add.png"]}],[{"start":{"row":123,"column":48},"end":{"row":123,"column":62},"action":"remove","lines":["img/remove.png"],"id":8},{"start":{"row":123,"column":48},"end":{"row":123,"column":72},"action":"insert","lines":["/static/media/remove.png"]}],[{"start":{"row":0,"column":0},"end":{"row":157,"column":11},"action":"remove","lines":["/*","Title: Cozeit More plugin by Yasir Atabani","Documentation: na","Author: Yasir O. Atabani","Website: http://www.cozeit.com","Twitter: @yatabani","MIT License, https://github.com/cozeit/czMore/blob/master/LICENSE.md","*/","(function ($, undefined) {","    \"use strict\";","","    $.fn.czMore = function (options) {","","        //Set defauls for the control","        var defaults = {","            max: 50,","            min: 0,","            onLoad: null,","            onAdd: null,","            onDelete: null,","            styleOverride: false,","            countFieldPrefix: '_czMore_txtCount',","        };","        //Update unset options with defaults if needed","        var options = $.extend(defaults, options);","        $(this).bind(\"onAdd\", function (event, data) {","            options.onAdd.call(event, data);","        });","        $(this).bind(\"onLoad\", function (event, data) {","            options.onLoad.call(event, data);","        });","        $(this).bind(\"onDelete\", function (event, data) {","            options.onDelete.call(event, data);","        });","","        //Executing functionality on all selected elements","        return this.each(function () {","            var obj = $(this);","            var i = recordsetCount();","            var divPlus = '<div id=\"btnPlus\" class=\"btnPlus\"/>';","            var count = '<input id=\"' + this.id + options.countFieldPrefix + '\" name=\"' + this.id + options.countFieldPrefix + '\" type=\"hidden\" value=\"0\" size=\"5\" />';","","            obj.before(count);","            var recordset = obj.children(\"#first\");","            obj.after(divPlus);","            var set = recordset.children(\".recordset\").children().first();","            var btnPlus = obj.siblings(\"#btnPlus\");","","            if(!options.styleOverride) {","              btnPlus.css({","                  'float': 'right',","                  'border': '0px',","                  'background-image': 'url(\"/static/media/add.png\")',","                  'background-position': 'center center',","                  'background-repeat': 'no-repeat',","                  'height': '25px',","                  'width': '25px',","                  'cursor': 'pointer',","              });","            }","","            if (recordset.length) {","                obj.siblings(\"#btnPlus\").click(function () {","                    if (isMaxRecordset()){","                        return false;","                    }","                    var i = recordsetCount();","                    var item = recordset.clone().html();","                    i++;","                    item = item.replace(/\\[([0-9]\\d{0})\\]/g, \"[\" + i + \"]\");","                    item = item.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + i + \"_\");","                    //$(element).html(item);","                    //item = $(item).children().first();","                    //item = $(item).parent();","","                    obj.append(item);","                    loadMinus(obj.children().last());","                    minusClick(obj.children().last());","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", i);","                    }","","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(i);","                    return false;","                });","                recordset.remove();","                for (var j = 0; j <= i; j++) {","                    loadMinus(obj.children()[j]);","                    minusClick(obj.children()[j]);","                    if (options.onAdd != null) {","                        obj.trigger(\"onAdd\", j);","                    }","                }","","                if (options.onLoad != null) {","                    obj.trigger(\"onLoad\", i);","                }","                //obj.bind(\"onAdd\", function (event, data) {","                //If you had passed anything in your trigger function, you can grab it using the second parameter in the callback function.","                //});","            }","","            function resetNumbering() {","                $(obj).children(\".recordset\").each(function (index, element) {","                   $(element).find('input:text, input:password, input:file, select, textarea').each(function(){","                        var old_name = this.name;","                        var new_name = old_name.replace(/\\_([0-9]\\d{0})\\_/g, \"_\" + (index + 1) + \"_\");","                        this.id = this.name = new_name;","                        //alert(this.name);","                    });","                    index++","                    minusClick(element);","                });","            }","","            function loadMinus(recordset) {","                var divMinus = '<div id=\"btnMinus\" class=\"btnMinus\" />';","                $(recordset).children().first().before(divMinus);","                var btnMinus = $(recordset).children(\"#btnMinus\");","                if(!options.styleOverride) {","                  btnMinus.css({","                      'float': 'right',","                      'border': '0px',","                      'background-image': 'url(\"/static/media/remove.png\")',","                      'background-position': 'center center',","                      'background-repeat': 'no-repeat',","                      'height': '25px',","                      'width': '25px',","                      'cursor': 'poitnter',","                  });","              }","            }","","            function minusClick(recordset) {","                $(recordset).children(\"#btnMinus\").click(function () {","                    var i = recordsetCount();","                    var id = $(recordset).attr(\"data-id\")","                    $(recordset).remove();","                    resetNumbering();","                    obj.siblings(\"input[name$='\" + options.countFieldPrefix + \"']\").val(obj.children(\".recordset\").length);","                    i--;","                    if (options.onDelete != null) {","                        if (id != null)","                            obj.trigger(\"onDelete\", id);","                    }","                });","            }","","            function recordsetCount(){","                return obj.children(\".recordset\").length;","            }","","            function isMaxRecordset(){","                return recordsetCount() >= options.max;","            }","        });","    };","})(jQuery);"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":561,"column":11},"action":"insert","lines":["/**"," * @copyright"," *  This program is free software: you can redistribute it and/or modify"," *  it under the terms of the GNU General Public License as published by"," *  the Free Software Foundation, either version 3 of the License, or"," *  (at your option) any later version."," *  "," *  This program is distributed in the hope that it will be useful,"," *  but WITHOUT ANY WARRANTY; without even the implied warranty of"," *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"," *  GNU General Public License for more details."," *  "," *  You should have received a copy of the GNU General Public License"," *  along with this program.  If not, see <http://www.gnu.org/licenses/>."," *  "," * @author Stephane Roucheray"," * @see Plugin Page   : http://code.google.com/p/jquery-dynamic-form/"," * @see Author's Blog : http://sroucheray.org"," * @see Follow author : http://twitter.com/sroucheray"," * @extends jQuery (requires at version >= 1.4)"," * @version 1.0.3"," */","(function($){","/**"," * @param {String} plusSelector HTML element serving the duplication when clicking on it"," * @param {String} minusSelector HTML element deleting the cloned form element"," * @param {Object} options Optional object, can contain any of the parameters below : "," *     limit      {Number}   : maximum number of duplicate fields authorized"," *     formPrefix {String}   : the prefix used to identify a form (if not defined will use normalized source selector)"," *     afterClone {Function} : a callback function called as soon as a duplication is done,"," *       this is useful for custom insertion (you can insert the duplicate anywhere in the DOM), "," *       inserting specific validation on cloned field"," *       - this function will be passed the cloned element as a unique parameter"," *       - return false if the cloned element should not be inserted"," *     normalizeFullForm {Boolean} : normalize all fields in the form (even outside the template) for better server side script handling (default true)"," *     "," *     createColor {String} : color effect when duplicating (requires jQuery UI Effects module)"," *     removeColor {String} : color effect when removing duplicate (idem)"," *     duration    {Number} : color effect duration (idem)"," *     "," *     data        {Object} : A JSON based representation of the data which will prefill the form (equivalent of the inject method)"," *     "," */","$.fn.dynamicForm = function (selectedTarget, plusSelector, minusSelector, options){","\tvar source = $(this),","\tminus,","\tplus,","\ttemplate,","\tformFields = \"input, checkbox, select, textarea,_token\",","\tclones = [],","\tdefaults = {","\t\tduration:1000,","\t\tnormalizeFullForm:true,","\t\tisSubDynamicForm:false","\t},","\tsubDynamicForm = [],","\tsubDynamicIndex = [],","\tindex = 0,","\tformPrefix;","\t","\t// Set plus and minus elements within sub dynamic form clones","\tif(options.internalSubDynamicForm){","\t\tminus = $(options.internalContainer).find(minusSelector);","\t\tplus = $(options.internalContainer).find(plusSelector);","\t}else{\t//Set normal plus an minus element","\t\tminus = $(minusSelector);","\t\tplus = $(plusSelector);","\t}","\t","\t// Extend default options with those provided","\toptions = $.extend(defaults, options);","\t//Set the form prefix","\tformPrefix = options.formPrefix || source.selector.replace(/\\W/g, \"\");","\t","\t","\t/**","\t * Clone the form template","\t */","\tfunction cloneTemplate(disableEffect){","\t\tvar clone, callBackReturn;","\t\tclone = template.cloneWithAttribut(true);","\t\t","\t\tif (typeof options.afterClone === \"function\") {","\t\t\tcallBackReturn = options.afterClone(clone);","\t\t}","\t\t","\t\tif(callBackReturn || typeof callBackReturn == \"undefined\"){","\t\t\tclone.insertAfter(clones[clones.length - 1] || source);","\t\t}","\t\t","\t\tclone.getSource = function(){","\t\t\treturn source;","\t\t};","","\t\t/* Normalize template id attribute */","\t\tif (clone.attr(\"id\")) {","\t\t\tclone.attr(\"id\", clone.attr(\"id\") + clones.length);","\t\t}","","\t\tif (clone.effect && options.createColor && !disableEffect) {","\t\t\tclone.effect(\"highlight\", {color:options.createColor}, options.duration);","\t\t}","\t\t","\t\tif (clones.length === 0){","\t\t\tsource.find(minusSelector).show();","\t\t}","","\t\treturn clone;","\t}","\t","\t/**","\t * On cloning make the form under the clone dynamic","\t * @param {Object} clone","\t */","\tfunction dynamiseSubClones(clone){","\t\t$(subDynamicForm).each(function(){","\t\t\tvar plus = this.getPlusSelector(), minus = this.getMinusSelector(), options = this.getOptions(), selector = this.selector;","\t\t\tclone.find(this.selector).each(function(){","\t\t\t\toptions = $.extend(","\t\t\t\t\t{","\t\t\t\t\t\tinternalSubDynamicForm:true, ","\t\t\t\t\t\tinternalContainer:clone, ","\t\t\t\t\t\tisInAClone:true, ","\t\t\t\t\t\touterCloneIndex:clones.length,","\t\t\t\t\t\tselector:selector","\t\t\t\t\t}, options);","\t\t\t\t$(this).dynamicForm(plus, minus, options);","\t\t\t});","\t\t});","\t}","\t","\t/**","\t * Handle click on plus when plus element is inside the template","\t * @param {Object} event","\t */","\tfunction innerClickOnPlus(event, extraParams){","\t\tvar clone,","\t\tcurrentClone = clones[clones.length -1] || source;","\t\tevent.preventDefault();","","\t\tsubDynamicIndex.push(index + 1);","\t\tindex = subDynamicIndex[subDynamicIndex.length-1];","","\t\tcurrentClone.find(minusSelector).show();","\t\tcurrentClone.find(plusSelector).hide();","","\t\tif (clones.length === 0) {","\t\t\tsource.find(minusSelector).hide();","\t\t}","\t\t","\t\tclone = cloneTemplate(extraParams);","","\t\tplus = clone.find(plusSelector);","\t\tminus = clone.find(minusSelector);","\t\t","\t\tminus.get(0).removableClone = clone;","\t\tminus.click(innerClickOnMinus);","\t\t","\t\tif (options.limit && (options.limit - 2) > clones.length) {","\t\t\tplus.show();","\t\t\tminus.show();","\t\t}else{","\t\t\tplus.hide();","\t\t\tminus.show();","\t\t}","\t\t","\t\tclones.push(clone);","\t\tnormalizeClone(clone, index);","\t\t","\t\tdynamiseSubClones(clone);","\t}","\t","\t/**","\t * Handle click on plus when plus element is outside the template","\t * @param {Object} event","\t */","\tfunction outerClickOnPlus(event, extraParams){","\t\tvar clone;","\t\t","\t\tevent.preventDefault();","\t\t","\t\t/* On first add, normalize source */","\t\tif (clones.length === 0) {","\t\t\tminus.show();","\t\t}","\t\tclone = cloneTemplate(extraParams);","\t\t","\t\tif (options.limit && (options.limit - 3) < clones.length) {","\t\t\tplus.hide();","\t\t}","\t\t","\t\tclones.push(clone);","\t\t","\t\tnormalizeClone(clone, clones.length);","\t\t","\t\tdynamiseSubClones(clone);","\t}","\t/**","\t * Handle click on minus when minus element is inside the template","\t * @param {Object} event","\t */","\tfunction innerClickOnMinus(event){","\t\tevent.preventDefault();","\t\t","\t\tif (this.removableClone.effect && options.removeColor) {","\t\t\tthat = this;","\t\t\tthis.removableClone.effect(\"highlight\", {","\t\t\t\tcolor: options.removeColor","\t\t\t}, options.duration, function(){that.removableClone.remove();});","\t\t} else {","\t\t","\t\t\tthis.removableClone.remove();","\t\t}","","\t\tremovableCloneId = this.removableClone.attr('id');","\t\t","\t\tcheckId = $.inArray(parseInt(removableCloneId[removableCloneId.length -1]), subDynamicIndex);","\t\tsubDynamicIndex.splice(checkId, 1);","","\t\tclones.splice($.inArray(this.removableClone, clones),1);","","\t\tif ($(selectedTarget).length) {","\t\t\tif (clones.length === 0){","\t\t\t\tsource.find(plusSelector).show();","\t\t\t\tsource.find(minusSelector).hide();","\t\t\t}else{","\t\t\t\tclones[clones.length -1].find(plusSelector).show();","\t\t\t}","\t\t} else {","\t\t\tif (clones.length === 1){","\t\t\t\tclones[0].find(plusSelector).show();","\t\t\t\tclones[0].find(minusSelector).hide();","\t\t\t}else{","\t\t\t\tclones[clones.length -1].find(plusSelector).show();","\t\t\t}","\t\t}","\t}","\t","\t/**","\t * Handle click on minus when minus element is outside the template","\t * @param {Object} event","\t */","\tfunction outerClickOnMinus(event){","\t\tevent.preventDefault();","\t\tvar clone = clones.pop();","\t\tif (clones.length >= 0) {","\t\t\tif (clone.effect && options.removeColor) {","\t\t\t\tthat = this;","\t\t\t\tclone.effect(\"highlight\", {","\t\t\t\t\tcolor: options.removeColor, mode:\"hide\"","\t\t\t\t}, options.duration, function(){clone.remove();});","\t\t\t} else {","\t\t\t\tclone.remove();","\t\t\t}","\t\t}","\t\tif (clones.length === 0) {","\t\t\tminus.hide();","\t\t}","\t\tplus.show();","\t}","\t","\t/**","\t * Normalize ids and name attributes of all children forms fields of an element","\t * @param {Object} elmnt","\t */","\tfunction normalizeSource(elmnt, prefix, index){","\t\telmnt.find(formFields).each(function(){","\t\t\tvar that = $(this), ","\t\t\tnameAttr = that.attr(\"name\"), ","\t\t\torigNameAttr = that.attr(\"origname\"),","\t\t\tidAttr = that.attr(\"id\"),","\t\t\torigId = that.attr(\"origid\");","","\t\t\t/* Normalize field name attributes */","\t\t\tif (!nameAttr) {","\t\t\t\t//TODO: that.attr(\"name\", formPrefix+\"form\"+index + \"[\"+index+\"]\");","\t\t\t}","\t\t\t","\t\t\tif(origNameAttr){","\t\t\t\t//This is a subform (thus prefix is not the same as below)","\t\t\t\tthat.attr(\"name\", prefix+\"[\"+index+\"]\"+\"[\"+origNameAttr+\"]\");","\t\t\t}else{","\t\t\t\t//This is the main form","\t\t\t\tthat.attr(\"origname\", nameAttr);","\t\t\t\t","\t\t\t\t//This is the main normalization","\t\t\t\tthat.attr(\"name\", prefix+\"[\"+index+\"]\"+\"[\"+nameAttr+\"]\");","\t\t\t}","\t\t\t","\t\t\t/* Normalize field id attributes */","\t\t\tif (idAttr) {","\t\t\t\t/* Normalize attached label */","\t\t\t\tthat.attr(\"origid\", idAttr);","\t\t\t\t$(\"label[for='\"+idAttr+\"']\").each(function(){","\t\t\t\t\t$(this).attr(\"origfor\", idAttr);","\t\t\t\t\t$(this).attr(\"for\", idAttr + index);","\t\t\t\t});","\t\t\t\tthat.attr(\"id\", idAttr + index);","\t\t\t}","\t\t});","\t}","\t","\tfunction normalizeClone(elmnt, index){","\t\tvar match, matchRegEx = /(.+\\[[^\\[\\]]+\\]\\[)(\\d+)(\\]\\[[^\\[\\]]+\\])$/;","\t\telmnt.find(formFields).each(function(){","\t\t\tvar that = $(this),","\t\t\tnameAttr = that.attr(\"name\"), ","\t\t\torigNameAttr = that.attr(\"origname\"),","\t\t\tidAttr = that.attr(\"id\"),","\t\t\tnewIdAttr = idAttr.slice(0,-1) + index,","\t\t\tmatch = matchRegEx.exec(nameAttr);","\t\t\tthat.attr(\"name\", match[1]+index+match[3]);","\t\t\t","\t\t\tif (idAttr) {","\t\t\t\tthat.attr(\"origid\", idAttr);","\t\t\t\t","\t\t\t\telmnt.find(\"label[for='\"+idAttr+\"']\").each(function(){","\t\t\t\t\t$(this).attr(\"for\", newIdAttr);","\t\t\t\t});","\t\t\t\tthat.attr(\"id\", newIdAttr);","\t\t\t}","\t\t});","\t}","\t","\tfunction normalizeSubClone(elmnt, formPrefix, index){","\t\tvar match, matchRegEx = /(.+)\\[([^\\[\\]]+)\\]$/;","\t\telmnt.find(formFields).each(function(){","\t\t\tvar that = $(this),","\t\t\tnameAttr = that.attr(\"name\"), ","\t\t\tidAttr = that.attr(\"id\"),","\t\t\tnewIdAttr = idAttr + index,","\t\t\tmatch = matchRegEx.exec(nameAttr);","\t\t\tthat.attr(\"name\", match[1]+\"[\"+formPrefix+\"]\"+\"[\"+index+\"]\"+\"[\"+match[2]+\"]\");","\t\t\t","\t\t\tif (idAttr) {","\t\t\t\tthat.attr(\"origid\", idAttr);","\t\t\t\t","\t\t\t\telmnt.find(\"label[for='\"+idAttr+\"']\").each(function(){","\t\t\t\t\t$(this).attr(\"for\", newIdAttr);","\t\t\t\t});","\t\t\t\tthat.attr(\"id\", newIdAttr);","\t\t\t}","\t\t});","\t}","\t","\t//Add a function to enable sub dynamic forms to register themselves","\tsource.each(function(){","\t\t$.extend(this, {","\t\t\taddSubDynamicForm : function(dynamicForm){","\t\t\t\tsubDynamicForm.push(dynamicForm);","\t\t\t},","\t\t\tgetFormPrefix : function(){","\t\t\t\treturn formPrefix;","\t\t\t},","\t\t\tgetSource : function(){","\t\t\t\treturn source;","\t\t\t}","\t\t});","\t});","\t","\t//Check if this dynamic form is a sub dynamic form","\tvar isMainForm = true;","\t$(this).parentsUntil(\"body\").each(function(){","\t\tif($.isFunction(this.addSubDynamicForm) && !options.isSubDynamicForm){","\t\t\tisMainForm = false;","\t\t\toptions.isSubDynamicForm = true;","\t\t\t","\t\t\tvar suboptions = $.extend(","\t\t\t\t{","\t\t\t\t\tinternalSubDynamicForm:true, ","\t\t\t\t\tinternalContainer:this","\t\t\t\t}, options);","\t\t\tthis.addSubDynamicForm(source);","\t\t\tformPrefix = this.getFormPrefix()+\"[0][\"+formPrefix+\"]\";","\t\t\treturn false;","\t\t}","\t});","\tif(isMainForm && !options.isInAClone){","\t\t//Main form name and prefix for the main form are the same for now","\t\tformPrefix = formPrefix+\"[\"+formPrefix+\"]\";","\t}","\t","\tif(!options.isInAClone){","\t\tnormalizeSource(source, formPrefix, 0);","\t}else{","\t\tformPrefix = formPrefix || options.selector.replace(/\\W/g, \"\");","\t\t//Main form name and prefix for the main form are the same for now","\t\tnormalizeSubClone(source, formPrefix, 0);","\t}","\tif(isMainForm && options.normalizeFullForm && !options.isInAClone){","\t\t//Normalize all forms outside duplicated template in order to ease server-side parsing","\t\t$(this).parentsUntil(\"form\").each(function(){","\t\t\tvar theForm = $(this).parent().get(0);","\t\t\t$(theForm).find(formFields).filter(\"[type!=submit]\").each(function(){","\t\t\t\tvar that = $(this), ","\t\t\t\tnameAttr = that.attr(\"name\"), ","\t\t\t\torigNameAttr = that.attr(\"origname\"),","\t\t\t\tidAttr = that.attr(\"id\"),","\t\t\t\torigId = that.attr(\"origid\");","\t\t\t\t","\t\t\t\tif(!origNameAttr){","\t\t\t\t\t// Normalize field name attributes","\t\t\t\t\tif (!nameAttr) {","\t\t\t\t\t\t//TODO: that.attr(\"name\", formPrefix+\"form\"+index + \"[\"+index+\"]\");","\t\t\t\t\t}","","\t\t\t\t\t//It's the main form","\t\t\t\t\tthat.attr(\"origname\", nameAttr);","\t\t\t\t\t","\t\t\t\t\t//This is the main normalization","\t\t\t\t\tthat.attr(\"name\", formPrefix+\"[\"+nameAttr+\"]\");","\t\t\t\t}","\t\t\t});","\t\t\t","\t\t});","\t}","\t","\tisPlusDescendentOfTemplate = source.find(\"*\").filter(function(){","\t\treturn this == plus.get(0);","\t});","\t","\tisPlusDescendentOfTemplate = isPlusDescendentOfTemplate.length > 0 ? true : false;","\t","\t/* Hide minus element */","\tminus.hide();","\t","\t/* If plus element is within the template */","\tif (isPlusDescendentOfTemplate) {","\t\t/* Handle click on plus */","\t\tplus.click(innerClickOnPlus);","\t\t","\t}else{","\t/* If plus element is out of the template */","\t\t/* Handle click on plus */","\t\tplus.click(outerClickOnPlus);","\t\t","\t\t/* Handle click on minus */","\t\tminus.click(outerClickOnMinus);","\t}","\t","\t$.extend( source, {","\t\tgetPlus : function(){","\t\t\treturn plus;","\t\t},","\t\tgetPlusSelector : function(){","\t\t\treturn plusSelector;","\t\t},","\t\tgetMinus : function(){","\t\t\treturn minus;","\t\t},","\t\tgetMinusSelector : function(){","\t\t\treturn minusSelector;","\t\t},","\t\tgetOptions : function(){","\t\t\treturn options;","\t\t},","\t\tgetClones : function(){","\t\t\tvar clonesAndSource = [source];","\t\t\treturn clonesAndSource.concat(clones);","\t\t},","\t\tgetSource : function(){","\t\t\treturn source;","\t\t},","\t\tinject : function(data){","\t\t\t/**","\t\t\t * Fill data of each main dynamic form clones","\t\t\t * @param {Object} formIndex","\t\t\t * @param {Object} formValue","\t\t\t */","\t\t\t var z = 0;","\t\t\tfunction fillData(formIndex, formValue){","\t\t\t\t//Loop over data form array (each item will match a specific clone)","\t\t\t\tvar mainForm = this;","\t\t\t\t//Shows required additional dynamic forms","\t\t\t\tif(formIndex > 0){","\t\t\t\t\tindex = formIndex - 1;","\t\t\t\t\tmainForm.getSource().getPlus().trigger(\"click\", [\"disableEffect\"]);","\t\t\t\t\tif (z === 0) {","\t\t\t\t\t\tmainForm.get(0).getSource().remove()\t\t\t\t\t\t","\t\t\t\t\t\tmainForm.get(0).getSource().getClones()[1].find(minusSelector).hide()","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tvar newArray = mainForm.get(0).getSource().getClones();","\t\t\t\tvar changeArray = [];","\t\t\t\tfor (var i = 0; i < newArray.length; i++) {","\t\t\t\t\t$.each(data, function(key, value){","\t\t\t\t\t\tchangeArray[key] =  newArray[i]","\t\t\t\t\t})","\t\t\t\t}","","\t\t\t\tvar clone = changeArray[formIndex];","\t\t\t\t$.each(formValue, function(index, value){","\t\t\t\t\tif($.isArray(value)){","\t\t\t\t\t\tmainForm = clone.find(\"#\"+index);","\t\t\t\t\t\tif(typeof mainForm.get(0).getSource === \"function\"){","\t\t\t\t\t\t\t$.each(value, $.proxy( fillData, mainForm.get(0).getSource()));","\t\t\t\t\t\t}","","\t\t\t\t\t}else{","\t\t\t\t\t\tvar formElements = changeArray[formIndex].find(\"[origname='\"+index+\"']\");","\t\t\t\t\t\tif(formElements){","\t\t\t\t\t\t\tif(formElements.get(0).tagName.toLowerCase() == \"input\"){","\t\t\t\t\t\t\t\t/* Fill in radio input */","\t\t\t\t\t\t\t\tif(formElements.attr(\"type\") == \"radio\"){","\t\t\t\t\t\t\t\t\tformElements.filter(\"[value='\"+value+\"']\").attr(\"checked\", \"checked\");","\t\t\t\t\t\t\t\t}else if(formElements.attr(\"type\") == \"checkbox\"){/* Fill in checkbox input */","\t\t\t\t\t\t\t\t\tformElements.attr(\"checked\", \"checked\");","\t\t\t\t\t\t\t\t}else{","\t\t\t\t\t\t\t\t\tformElements.attr(\"value\", value);","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}else if(formElements.get(0).tagName.toLowerCase() == \"textarea\"){","\t\t\t\t\t\t\t\t/* Fill in textarea */","\t\t\t\t\t\t\t\tformElements.text(value);","\t\t\t\t\t\t\t}else if(formElements.get(0).tagName.toLowerCase() == \"select\"){","\t\t\t\t\t\t\t\t/* Fill in select */","\t\t\t\t\t\t\t\t$(formElements.get(0)).find(\"option\").each(function(){","\t\t\t\t\t\t\t\t\tif($(this).text() == value || $(this).attr(\"value\") == value){","\t\t\t\t\t\t\t\t\t\t$(this).attr(\"selected\", \"selected\");","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t});","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t});","\t\t\t\tz++;","\t\t\t}","\t\t\t//Loop over each form","\t\t\t$.each(data, $.proxy( fillData, source ));","\t\t}","\t});","\t","\ttemplate = source.cloneWithAttribut(true);","\t","\tif(options.data){","\t\tsource.inject(options.data);","\t}","\t","\treturn source;","};","","/**"," * jQuery original clone method decorated in order to fix an IE < 8 issue"," * where attributs especially name are not copied "," */","jQuery.fn.cloneWithAttribut = function( withDataAndEvents ){","\tif ( jQuery.support.noCloneEvent ){","\t\treturn $(this).clone(withDataAndEvents);","\t}else{","\t\t$(this).find(\"*\").each(function(){","\t\t\t$(this).data(\"name\", $(this).attr(\"name\"));","\t\t});","\t\tvar clone = $(this).clone(withDataAndEvents);","\t\t","\t\tclone.find(\"*\").each(function(){","\t\t\t$(this).attr(\"name\", $(this).data(\"name\"));","\t\t});","\t\t","\t\treturn clone;","\t}","};","})(jQuery);"],"id":10}]]},"ace":{"folds":[],"scrolltop":7471.5,"scrollleft":0,"selection":{"start":{"row":561,"column":11},"end":{"row":561,"column":11},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":542,"state":"doc-start","mode":"ace/mode/javascript"}},"timestamp":1565443408145,"hash":"d2abee51ce430a2605ee9515bd16cd14b30348f3"}